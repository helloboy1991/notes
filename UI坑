UI开发踩过的坑：

  1.windows下npm安装第三方包，存在默认路径问题
    问题：导致全局安装的第三方程序无法命令行直接访问
    解决：修改npmrc，配置正确的路径
    http://elickzhao.github.io/2016/12/Windows%20%E7%B3%BB%E7%BB%9F%E4%B8%8B%E8%AE%BE%E7%BD%AENodejs%20NPM%E5%85%A8%E5%B1%80%E8%B7%AF%E5%BE%84/
    https://segmentfault.com/q/1010000004992727
    
  2.如果系统中有一些配置文件在服务器上做了配置修改,然后后续开发又新添加一些配置项的时候,在发布这个配置文件的时候,会发生代码冲突:
  error: Your local changes to the following files would be overwritten by merge:
        protected/config/main.php
  Please, commit your changes or stash them before you can merge.

  如果希望保留生产服务器上所做的改动,仅仅并入新配置项, 处理方法如下:
    git stash
    git pull
    git stash pop
  然后可以使用Git diff -w +文件名 来确认代码自动合并的情况.

  反过来,如果希望用代码库中的文件完全覆盖本地工作版本. 方法如下:
    git reset --hard
    git pull

  3.git pull时遇到error: cannot lock ref ‘xxx’: ref xxx is at （一个commitID） but expected的解决办法
  在执行Git pull时遇到如下错误：
        error: cannot lock ref 'xxx': ref xxx is at （一个commitID） but expected
        
  遇到这个错误会导致git pull失败。

  问题原因
      原因是你这个git工程的.git/refs目录下跟踪的某些git分支，在git pull的时候，与远端的对应分支的refs对比发现不同，所以导致git pull报错。
      通常产生这个问题的原因是（以分支git/yousa/feature_01为例）：

     有人操作git/yousa/feature_01这个分支，在git push的时候使用了git push –force，（当然这个人的git push是push不上去），导致远端分支被覆盖，你本地的refs与远端无法一致，导致问题
     git分支是不区分大小写的，如果有人删除掉这个远端分支又重新新建了一个这个分支也会出现同样的问题。
  
  解决办法
      根据前面的原因有一些操作方法，基本思路就是要么，强行git pull；要么则是删除掉有问题的refs，再进行git pull（个人还是推荐第二种）（以分支git/yousa/feature_01为例）
    删除有问题的refs，可以直接在.git/refs下面根据错误提示删除对应的refs文件，比如这个就是需要删除refs/remotes/origin/git/yousa/feature_01文件（嫌麻烦直接删除整个refs目录也行）
    使用git命令删除相应refs文件，git update-ref -d refs/remotes/origin/git/yousa/feature_01
    简单粗暴强行git pull，执行git pull -p
